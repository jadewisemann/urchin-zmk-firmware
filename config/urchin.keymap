/*
urchin_zmk_1.0.0
---
urchin: log
25 08 13: arrive

*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


// Layer definitions
#define BASE 0
#define SYM 1
#define NAV 2
#define FUNC 3
#define FUNC2 4
#define SETTINGS 5
#define DUMMY 6
// -----------------

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};


/ {
	
	behaviors {
		// Enables holding the first mod-tap key
		// by performing a tap-release-hold sequence.
		// To use it: "&qt KEYCODE1 KEYCODE2"
		qt: quick_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "QUICK_TAP";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			bindings = <&kp>, <&kp>;
		};
	};

	macros {
		unstick: unstick {
			// sometimes my device thinks a modifier is being held down
			// pressing all modifiers fixes it.
			label = "ZM_unstick";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
		};

		vsc_focus_left: vsc_focus_left {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings =
				<
					&kp LC(K) &kp LC(LEFT)
				>;
			
		}

		vsc_focus_down: vsc_focus_down {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings =
				<
					&kp LC(K) &kp LC(DOWN)
				>;
		}

		vsc_focus_right: vsc_focus_right {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings =
				<
					&kp LC(K) &kp LC(RIGHT)
				>;
		}

		vsc_focus_up: vsc_focus_up {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings =
				<
					&kp LC(K) &kp LC(UP)
				>;
		}

		vsc_move_left: vsc_move_left {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings =
				<
					&kp LC(K) &kp UP
				>;
		}
		
		vsc_move_down: vsc_move_down {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings =
				<
					&kp LC(K) &kp DOWN
				>;
		}

		vsc_move_right: vsc_move_right {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings =
				<
					&kp LC(K) &kp RIGHT
				>;
		}

		vsc_move_up: vsc_move_up {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings =
				<
					&kp LC(K) &kp UP
				>;
		}

	};

	combos {
		compatible = "zmk,combos";

		combo_enter {
			timeout-ms = <50>;
			key-positions = <17 18>;
			bindings = <&kp ENTER>;
		}

		combo_esc {
			timeout-ms = <50>;
			key-positions = <1 2>;
			bindings = <&kp ESC>;
		}

		combo_capsword {
			timeout-ms = <50>;
			key-positions = <20 29>;
			bindings = <&caps_word>;
		}

		combo_left_thumb {
			timeout-ms = <80>;
			key-positions = <30 31>;
			bindings = <&kp LG(ESC)>;
		};

		combo_right_thumb {
			timeout-ms = <80>;
			key-positions = <32 33>;
			bindings = <&kp DEL>;
		};

		combo_settings {
			timeout-ms = <200>;
			key-positions = <31 32>;
			bindings = <&mo SETTINGS>;
		};
	};

	keymap {
		compatible = "zmk,keymap";

		// #0
		default_layer {		
			label = "base";	
			bindings = <
				&kp Q       &kp W       &kp E       &kp R        &kp T                &kp Y        &kp U        &kp I        &kp O          &kp SLASH 
				&kp A       &kp S       &kp D       &kp F        &kp G                &kp H        &kp J        &kp K        &kp L          &kp P
				&mt LSHFT Z &mt LALT X  &kp C       &kp V        &kp B                &kp B        &kp N        &kp M        &mt RALT COMMA &kp RSHIFT DOT
																						&lt 1 SPACE  &mt LCTRL TAB        &lt 3 LANG2  &lt 2 BSPC
			>;
		};

		// #1: symbol
		sym_layer {
			label = "sym";
			bindings = <
				&kp LS(GRAVE) &kp MINUS		  &kp PLUS      &kp SEMI     &kp LS(SQT)     &kp LS(BSLH)  &kp LS(LBKT)  &kp LBKT     &kp RBKT			 &kp LS(RBKT)  
				&kp GRAVE			&kp LS(MINUS) &kp LS(PLUS)  &kp LS(SEMI) &kp SQT         &kp BSLH      &kp LS(COMMA) &kp LS(N9)	 &kp LS(N0)    &kp LS(DOT)
				&kp LS(N1) 	  &kp LS(N2)    &kp LS(N3)    &kp LS(N4)   &caps_word      &kp RCTRL     &kp LS(N5)    &kp LS(N6)   &kp LS(N7)    &kp LS(N8)
																									&trans		   &trans  				 &trans				 &trans
			>;
		};

		// #2: number(_left_) & nav(_right_)
		nav_layer {
			label = "nav";
			bindings = <
				&kp N6 				&kp N7		    &kp N8        &kp N9     	 &kp N0          &kp LS(BSLH)  &kp LS(LBKT)  &kp LBKT     &kp RBKT			 &kp LS(RBKT)  
				&kp N1        &kp N2     		&kp N3     		&kp N4     	 &kp N5          &kp BSLH      &kp LS(COMMA) &kp LS(N9)	 &kp LS(N0)    &kp LS(DOT)
				&kp LS(N1) 	  &kp LS(N2)    &kp LS(N3)    &kp LS(N4)   &caps_word      &kp RCTRL     &kp LS(N5)    &kp LS(N6)   &kp LS(N7)    &kp LS(N8)
																									&trans		   &trans  				 &trans				 &trans
			>;
		};

		// #3: browser-nav(_left_) & function(_right_)
		func_layer {
			label = "func";
			bindings = <
				&kp LC(w)			&kp LC(PAGE_UP) &vsc_focus_up   &kp LC(PAGE_DOWN) &none       &none    &kp F9       &kp F10        &kp F11	       &kp F12   
				&mo FUNC2     &vsc_focus_left &vsc_focus_down &vsc_focus_right  &none       &none    &kp F5       &kp F6	        &kp F7         &kp F8 
				&kp none 	    &kp LC(T)       &kp LC(N)       &kp LC(LS(n))  	  &none       &none    &kp F1       &kp F2         &kp F3         &kp F4
																											&trans		        &trans  	  &trans	 &trans
			>;
		};

		// #4:  func_raise(_left_)
		func_2_layer {
			label = "func2";
			bindings = <
				&none        &trans         &vsc_move_up    &trans          &none       &none        &none        &none        &none        &none 
				&none        &vsc_move_left &vsc_move_down  &vsc_move_right &none       &none        &none        &none        &none        &none 
				&none        &none          &none           &none           &none       &none        &none        &none        &none        &none 
																										&trans          &trans      &trans       &trans
			>;
		};

		// #5: setting
		settings_layer {
				label = "set";
				bindings = <
				&bootloader    &none   &none      &bt BT_CLR     &bt BT_SEL 0       &bt BT_SEL 3    &none    &unstick   &none   &bootloader 
				&none          &none   &none      &none          &bt BT_SEL 1       &bt BT_SEL 4    &none    &none      &none   &none
				&studio_unlock &none   &none      &none          &bt BT_SEL 2       &bt BT_SEL 5    &none    &none      &none   &studio_unlock
																					&none          &none              &none           &none 
				>;
		};

		// #6:	dummy
		dummy_layer {
			label = "dummy";
			bindings = <
				&none        &none        &none        &none        &none       &none        &none        &none        &none        &none 
				&none        &none        &none        &none        &none       &none        &none        &none        &none        &none 
				&none        &none        &none        &none        &none       &none        &none        &none        &none        &none 
																	&none        &none        &none       &none 
			>;
		};

	};
};
